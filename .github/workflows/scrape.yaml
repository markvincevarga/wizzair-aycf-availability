name: scrape

on:
  schedule:
    - cron: "15 6 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape-availabilities:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends curl ghostscript ca-certificates
          curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Run Scrape
        run: |
          uv run --link-mode=copy main.py fetch --pdf-dir pdfs
          echo Done fetching
          echo Doing self-check: only one file must exist
          [ $(ls pdfs | wc -l) = 1 ] && echo "Success" || { echo "Failure"; ls data; exit 1; }
          mkdir artifacts
          cp pdfs/$(ls pdfs) artifacts/availability.pdf

      - uses: actions/upload-artifact@v4
        with:
          name: availability-pdf
          path: artifacts/availability.pdf

      - name: Run Parse
        run: |
          uv run --link-mode=copy main.py parse --data-dir data artifacts/availability.pdf
          echo Doing self-check: only one file must exist
          if [ $(git ls-files data --others --exclude-standard | wc -l) = 1 ]; then
              echo "Success" 
          else
              echo "Failure"
              git ls-files data --others --exclude-standard
              exit 1
          fi

      - name: Setup Git Config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

       - name: Generate Dashboard Data
         run: |
           uv run --link-mode=copy docs/generate_data.py
           echo "Dashboard data generated successfully"

       - name: Commit New Files and Push
         run: |
           # Stage the CSV file and generated JSON, commit and push
           file_path=$(git ls-files data --others --exclude-standard)
           timestamp=$(echo "${file_path##*/}" | cut -d '.' -f 1)
           git add ${file_path}
           git add docs/dashboard_data.json
           git commit -m "add availabilities for ${timestamp} and update dashboard data"
           git --no-pager log -n 1
           git push origin main
